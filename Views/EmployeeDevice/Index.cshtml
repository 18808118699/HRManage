
@{
    ViewBag.Title = "人员设备绑定";
    Layout = ViewBag.Layout;
}

<div class="page-content-body">
    <div class="row">
        <div class="col-md-12">
            <div class="booking-search">
                <div class="row form-group">
                    <div class="fiter col-md-6 col-xs-6" data-column="0" data-name="EmployeeId">
                        <label class="control-label">工号:</label>
                        <div class="input-icon">
                            <input class="form-control" type="text" id="col0_filter">
                        </div>
                    </div>
                    <div class="fiter col-md-6 col-xs-6" data-column="1" data-name="DeviceId">
                        <label class="control-label">设备Id:</label>
                        <div class="input-icon">
                            <input class="form-control" type="text" id="col1_filter">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <button class="btn green btn-block  margin-bottom-20" id="Search">查询<i class="m-icon-swapright m-icon-white"></i></button>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <br />
    <div class="row">
        <div class="col-md-12">
            <table id="myTable" class="table table-striped table-bordered nowrap"></table>
        </div>
    </div>
</div>
@section scripts{

<script>
    function filterColumn(i) {
        $('#myTable').DataTable().column(i).search(
            $('#col' + i + '_filter').val(),
            false,
            false
        ).draw();
    }
    var editor;
    $(document).ready(function () {
        App.addResizeHandler(Resize);
        editor = new $.fn.dataTable.Editor({
            idSrc: "Id",
            ajax: {
                create: {
                    type: 'POST',
                    url: '@Url.Action("EmployeeDeviceIndexCreate", "EmployeeDevice")'
                },
                edit: {
                    type: 'POST',
                    url: '@Url.Action("EmployeeDeviceIndexUpdate", "EmployeeDevice")'
                },
                remove: {
                    type: 'POST',
                    url: '@Url.Action("EmployeeDeviceIndexDelete", "EmployeeDevice")'
                }
            },
            table: "#myTable",
            fields: [
                { label: "工号*:", name: "EmployeeId" },
                    @*{
                        label: "工号/姓名*:", name: "EmployeeId",
                        type: "select2",
                        opts: {
                            theme: "classic",
                            ajax: {
                                type: 'GET',
                                url: "@Url.Action("EmployeeIDInfraData", "Infra")",
                                cache: false,
                                dataType: 'json',
                                delay: 250,
                                data: function (params) {
                                    return {
                                        term: params.term, // search term 请求参数
                                        page: params.page,

                                    };
                                },
                                tags: false,
                                allowClear: false,
                                processResults: function (data, params) {
                                    params.page = params.page || 1;
                                    return {
                                        results: data.items,//itemList
                                        pagination: {
                                            more: (params.page * 30) < data.total_count
                                        }
                                    };
                                },
                                multiple: false
                            },
                            escapeMarkup: function (markup) { return markup; },
                            formatResult: function formatRepo(repo) { return repo.text; },
                            formatSelection: function formatRepoSelection(repo) { return repo.text; }
                        }
                    },*@
                {
                    label: "设备名称/ID*:", name: "DeviceId",
                    type: "select2",
                    opts: {
                        theme: "classic",
                        ajax: {
                            type: 'GET',
                            url: "@Url.Action("DeviceInfraData", "Infra")",
                            cache: false,
                            dataType: 'json',
                            delay: 250,
                            data: function (params) {
                                return {
                                    term: params.term, // search term 请求参数
                                    page: params.page,

                                };
                            },
                            tags: false,
                            allowClear: false,
                            processResults: function (data, params) {
                                params.page = params.page || 1;
                                return {
                                    results: data.items,//itemList
                                    pagination: {
                                        more: (params.page * 30) < data.total_count
                                    }
                                };
                            },
                            multiple: false
                        },
                        escapeMarkup: function (markup) { return markup; },
                        formatResult: function formatRepo(repo) { return repo.text; },
                        formatSelection: function formatRepoSelection(repo) { return repo.text; }
                    }
                },
                //{ label: "工号*:", name: "EmployeeId" },
                //{ label: "设备Id*:", name: "DeviceId" },
                { label: "备注:", name: "Remarks" },
            ]
        });
        var table = $('#myTable').DataTable({
            lengthMenu: [[10, 25, 50, 100, 500], [10, 25, 50, 100, 500]],
            ajax: {
                url: "@Url.Action("EmployeeDeviceIndexData", "EmployeeDevice")",
                type: "post"
            },
            order: [[0, 'asc']],//一定要添加
            colReorder: {
                fixedColumnsLeft: 1
            },
            columns: [
                {
                    data: "EmployeeId",
                    render: function (val) {
                        var employeeName;
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("EmployeeNameDataByID", "Infra")",
                            data: { "employeeId": val },
                            dataType: "json",
                            cache: false,
                            async: false,
                            success: function (data) {
                                employeeName = val + "-" + data.EmployeeName;
                            }
                        });
                        return employeeName;
                    },
                    title: "员工",
                    width: "90px",
                },
                {
                    data: "DeviceId",
                    render: function (val) {
                        var DeviceName;
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("DeviceNameDataByID", "Infra")",
                            data: { "deviceId": val },
                            dataType: "json",
                            cache: false,
                            async: false,
                            success: function (data) {
                                DeviceName = val + "-" + data.DeviceName;
                            }
                        });
                        return DeviceName;
                    },
                    title: "设备",
                    width: "90px",
                },
                { data: "Remarks", title: "备注", searchable: true, orderable: true, width: "100px", responsivePriority: 1 },
            ],
            buttons: [
                //{ extend: "create", text: "创建", editor: editor },
                //{ extend: "edit", text: "编辑", editor: editor },
                //{ extend: "remove", text: "删除", editor: editor },
                    @*@if (Context.HasPermission(Url.Action("EmployeeDeviceIndexCreate", "EmployeeDevice")))
                    {
                        Output.WriteLine("{ extend: \"create\", text: \"创建\", editor: editor },");
                    }
                @if (Context.HasPermission(Url.Action("EmployeeDeviceIndexUpdate", "EmployeeDevice")))
                    {
                        Output.WriteLine("{ extend: \"edit\", text: \"编辑\", editor: editor },");
                    }
                @if (Context.HasPermission(Url.Action("EmployeeDeviceIndexDelete", "EmployeeDevice")))
                    {
                        Output.WriteLine("{ extend: \"remove\", text: \"删除\", editor: editor },");
                    }*@
                {
                    extend: 'collection',
                    text: '导出',
                    buttons: [
                        { extend: "copyHtml5", text: "复制" },
                        { extend: "excelHtml5", text: "导出EXCEL" }
                        //{ extend: "csvHtml5", text: "导出CSV" },
                        //{ extend: "pdfHtml5", text: "导出PDF" }
                    ]
                }
            ]
        });

        editor.on('initCreate', function () {
            editor.show();
            editor.field('EmployeeId').enable();
        });

        editor.on('initEdit', function () {
            editor.show();
            editor.field('EmployeeId').disable();
            //editor.field('DeviceId').show();
            //editor.field('Remarks').show();//Shows all fields
        });

        editor.on('preSubmit', function (e, o, action) {
            if (action !== 'remove') {
                ;
            }
        });

        $('#myTable')
            .on('error.dt', function (e, settings, techNote, message) {
                if (e.type = 'error') {
                    toastr.error(settings.jqXHR.responseText, "", { target: '.page-content-body' });
                }
            });

        $('#Search').click(function () {
            var items = $(this).parents('.booking-search').find('.fiter');
            $.each(items, function (index, obj) {
                var i = $(obj).attr('data-column');
                var name = $(obj).attr('data-name') + '';
                var val = $('#col' + i + '_filter').val();
                if (val === null)
                    val = '';
                var index = $('#myTable').DataTable().columns().dataSrc().indexOf(name)
                var selectot = '.search-' + index;
                if ($(selectot).length === 0) {
                    $('#myTable').DataTable().column(index).search(val, false, false);
                }
                else {
                    $('#myTable').DataTable().column($(selectot)).search(val, false, false);
                }
            });

            $('#myTable').DataTable().columns().search().draw();
        });
    });

    function Resize() {

        $('#myTable').DataTable()
            .columns.adjust()
            .responsive.recalc();
    }
</script>
}