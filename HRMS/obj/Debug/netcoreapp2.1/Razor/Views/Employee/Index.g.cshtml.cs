#pragma checksum "D:\HRManage\HRMS\Views\Employee\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c420f1af2487b92181c42dfdadf4c56147b69939"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Employee_Index), @"mvc.1.0.view", @"/Views/Employee/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Employee/Index.cshtml", typeof(AspNetCore.Views_Employee_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\HRManage\HRMS\Views\_ViewImports.cshtml"
using HRMS.Middleware.PermissionMiddleware;

#line default
#line hidden
#line 2 "D:\HRManage\HRMS\Views\_ViewImports.cshtml"
using HRMS.App_Start;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c420f1af2487b92181c42dfdadf4c56147b69939", @"/Views/Employee/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"308e485a9cf43d1ee77f9280bbe22e6601398bd4", @"/Views/_ViewImports.cshtml")]
    public class Views_Employee_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "D:\HRManage\HRMS\Views\Employee\Index.cshtml"
  
    ViewBag.Title = "人员档案";
    Layout = ViewBag.Layout;

#line default
#line hidden
            BeginContext(68, 1404, true);
            WriteLiteral(@"<div class=""page-content-body"">
    <div class=""row"">
        <div class=""col-md-12"">
            <div class=""booking-search"">
                <div class=""row form-group"">
                    <div class=""fiter col-md-6 col-xs-6"" data-column=""0"">
                        <label class=""control-label"">编码:</label>
                        <div class=""input-icon"">
                            <input class=""form-control"" type=""text"" id=""col0_filter"">
                        </div>
                    </div>
                    <div class=""fiter col-md-6 col-xs-6"" data-column=""1"">
                        <label class=""control-label"">名称:</label>
                        <div class=""input-icon"">
                            <input class=""form-control"" type=""text"" id=""col1_filter"">
                        </div>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-md-2"">
                        <button class=""btn green btn-block  margin-b");
            WriteLiteral(@"ottom-20"" id=""Search"">查询<i class=""m-icon-swapright m-icon-white""></i></button>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <br />
    <div class=""row"">
        <div class=""col-md-12"">
            <table id=""myTable"" class=""table table-striped table-bordered nowrap""></table>
        </div>
    </div>
</div>
");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(1489, 478, true);
                WriteLiteral(@"

    <script>
        function filterColumn(i) {
            $('#myTable').DataTable().column(i).search(
                $('#col' + i + '_filter').val(),
                false,
                false
            ).draw();
        }
        var editor;
        $(document).ready(function () {
            App.addResizeHandler(Resize);
            editor = new $.fn.dataTable.Editor({
                idSrc: ""Id"",
                ajax: {
                    url: """);
                EndContext();
                BeginContext(1968, 43, false);
#line 57 "D:\HRManage\HRMS\Views\Employee\Index.cshtml"
                     Write(Url.Action("EmployeeIndexData", "Employee"));

#line default
#line hidden
                EndContext();
                BeginContext(2011, 5653, true);
                WriteLiteral(@""",
                    type: ""post""
                },
                table: ""#myTable"",
                fields: [
                    { label: ""工号:"", name: ""EmployeeId"" },
                    { label: ""姓名:"", name: ""Name"" },

                    {
                        type: ""select"",
                        label: ""证件类型:"",
                        name: ""IdentityType"",
                        options: [
                            { label: ""身份证"", value: ""1"" },
                            { label: ""护照"", value: ""2"" },
                            { label: ""香港身份证"", value: ""3"" },
                            { label: ""其他"", value: ""4"" }
                        ]
                    },

                    { label: ""证件号码:"", name: ""IdentityNumber"" },
                    { label: ""民族:"", name: ""Ethnicity"" },
                    {
                        type: ""datetime"",
                        label: ""出生日期:"",
                        name: ""Birth""
                    },
                    ");
                WriteLiteral(@"{ label: ""性别:"", name: ""Gender"" },
                    {
                        type: ""select"",
                        label: ""婚姻状况:"",
                        name: ""Marital"",
                        options: [
                            { label: ""未婚"", value: ""1"" },
                            { label: ""已婚"", value: ""2"" },
                            { label: ""保密"", value: ""3"" }
                        ]
                    },
                    {
                        type: ""select"",
                        label: ""文化程度:"",
                        name: ""Education"",
                        options: [
                            { label: ""博士"", value: ""1"" },
                            { label: ""硕士"", value: ""2"" },
                            { label: ""本科"", value: ""3"" },
                            { label: ""大专"", value: ""4"" },
                            { label: ""中专"", value: ""5"" },
                            { label: ""高中"", value: ""6"" },
                            { label: ""初中"", value:");
                WriteLiteral(@" ""7"" },
                            { label: ""小学及以下"", value: ""8"" }
                        ]
                    },
                    { label: ""毕业院校:"", name: ""GraduateFrom"" },
                    {
                        type: ""datetime"",
                        label: ""毕业时间:"",
                        name: ""GraduationDate""
                    },
                    {
                        type: ""select"",
                        label: ""政治面貌:"",
                        name: ""Political"",
                        options: [
                            { label: ""团员"", value: ""1"" },
                            { label: ""党员"", value: ""2"" },
                            { label: ""群众"", value: ""3"" }
                        ]
                    },
                    { label: ""户口所在地:"", name: ""RegisteredResidence"" },
                    { label: ""常住地址:"", name: ""Residence"" },
                    { label: ""联系手机:"", name: ""MobilePhone"" },
                    { label: ""联系电话:"", name: ""Phone"" },
    ");
                WriteLiteral(@"                { label: ""紧急联系人:"", name: ""EmergencyContact"" },
                    { label: ""紧急联系人电话:"", name: ""EmContactPhone"" },
                    { label: ""邮箱地址:"", name: ""Email"" },
                    { label: ""邮政编码:"", name: ""ZipCode"" },
                    { label: ""资格证书:"", name: ""Certificates"" },
                    {
                        type: ""datetime"",
                        label: ""取得资格证书日期:"",
                        name: ""CertificateDate""
                    },
                    {
                        type: ""datetime"",
                        label: ""入职日期:"",
                        name: ""EntryDate""
                    },
                    {
                        type: ""datetime"",
                        label: ""离职日期:"",
                        name: ""DimissionDate""
                    },
                    { label: ""劳动合同期限:"", name: ""TermOfContract"" },
                    {
                        type: ""select"",
                        label: ""员工状态:"",
       ");
                WriteLiteral(@"                 name: ""EmployeeStatus"",
                        options: [
                            { label: ""未入职"", value: 1 },
                            { label: ""在职"", value: 2 },
                            { label: ""离职"", value: 3 },
                            { label: ""黑名单"", value: 4 },
                            { label: ""失效"", value: 5 }
                        ]
                    },
                    {
                        type: ""radio"",
                        label: ""是否冻结:"",
                        name: ""Valid"",
                        options: [
                            { label: ""是"", value: true },
                            { label: ""否"", value: false }
                        ]
                    },
                    {
                        type: ""select"",
                        label: ""员工类型:"",
                        name: ""EmployeeType"",
                        options: [
                            { label: ""正式工"", value: ""1"" },
                    ");
                WriteLiteral(@"        { label: ""实习生"", value: ""2"" },
                            { label: ""长期劳务"", value: ""3"" },
                            { label: ""临时劳务"", value: ""4"" }
                        ]
                    },
                    {
                        label: ""所属公司:"", name: ""Company"",
                        type: ""select2"",
                        opts: {
                            theme: ""classic"",
                            ajax: {
                                type: 'GET',
                                url: """);
                EndContext();
                BeginContext(7665, 43, false);
#line 190 "D:\HRManage\HRMS\Views\Employee\Index.cshtml"
                                 Write(Url.Action("CompanySelectData", "Employee"));

#line default
#line hidden
                EndContext();
                BeginContext(7708, 1825, true);
                WriteLiteral(@""",
                                cache: false,
                                dataType: 'json',
                                delay: 250,
                                data: function (params) {
                                    return {
                                        term: params.term, // search term 请求参数
                                        page: params.page
                                    };
                                },
                                tags: false,
                                allowClear: false,
                                processResults: function (data, params) {
                                    params.page = params.page || 1;
                                    return {
                                        results: data.items,//itemList
                                        pagination: {
                                            more: (params.page * 30) < data.total_count
                                        }
          ");
                WriteLiteral(@"                          };
                                },
                                multiple: false
                            },
                            escapeMarkup: function (markup) { return markup; },
                            formatResult: function formatRepo(repo) { return repo.text; },
                            formatSelection: function formatRepoSelection(repo) { return repo.text; }
                        }
                    },
                    {
                        label: ""所属部门:"", name: ""Department"",
                        type: ""select2"",
                        opts: {
                            theme: ""classic"",
                            ajax: {
                                type: 'GET',
                                url: """);
                EndContext();
                BeginContext(9534, 46, false);
#line 225 "D:\HRManage\HRMS\Views\Employee\Index.cshtml"
                                 Write(Url.Action("DepartmentSelectData", "Employee"));

#line default
#line hidden
                EndContext();
                BeginContext(9580, 1821, true);
                WriteLiteral(@""",
                                cache: false,
                                dataType: 'json',
                                delay: 250,
                                data: function (params) {
                                    return {
                                        term: params.term, // search term 请求参数
                                        page: params.page
                                    };
                                },
                                tags: false,
                                allowClear: false,
                                processResults: function (data, params) {
                                    params.page = params.page || 1;
                                    return {
                                        results: data.items,//itemList
                                        pagination: {
                                            more: (params.page * 30) < data.total_count
                                        }
          ");
                WriteLiteral(@"                          };
                                },
                                multiple: false
                            },
                            escapeMarkup: function (markup) { return markup; },
                            formatResult: function formatRepo(repo) { return repo.text; },
                            formatSelection: function formatRepoSelection(repo) { return repo.text; }
                        }
                    },
                    {
                        label: ""岗位:"", name: ""Position"",
                        type: ""select2"",
                        opts: {
                            theme: ""classic"",
                            ajax: {
                                type: 'GET',
                                url: """);
                EndContext();
                BeginContext(11402, 44, false);
#line 260 "D:\HRManage\HRMS\Views\Employee\Index.cshtml"
                                 Write(Url.Action("PositionSelectData", "Employee"));

#line default
#line hidden
                EndContext();
                BeginContext(11446, 1830, true);
                WriteLiteral(@""",
                                cache: false,
                                dataType: 'json',
                                delay: 250,
                                data: function (params) {
                                    return {
                                        term: params.term, // search term 请求参数
                                        page: params.page
                                    };
                                },
                                tags: false,
                                allowClear: false,
                                processResults: function (data, params) {
                                    params.page = params.page || 1;
                                    return {
                                        results: data.items,//itemList
                                        pagination: {
                                            more: (params.page * 30) < data.total_count
                                        }
          ");
                WriteLiteral(@"                          };
                                },
                                multiple: false
                            },
                            escapeMarkup: function (markup) { return markup; },
                            formatResult: function formatRepo(repo) { return repo.text; },
                            formatSelection: function formatRepoSelection(repo) { return repo.text; }
                        }
                    },
                    {
                        label: ""所属劳务公司:"", name: ""LabourCompany"",
                        type: ""select2"",
                        opts: {
                            theme: ""classic"",
                            ajax: {
                                type: 'GET',
                                url: """);
                EndContext();
                BeginContext(13277, 44, false);
#line 295 "D:\HRManage\HRMS\Views\Employee\Index.cshtml"
                                 Write(Url.Action("SupplierSelectData", "Employee"));

#line default
#line hidden
                EndContext();
                BeginContext(13321, 1691, true);
                WriteLiteral(@""",
                                cache: false,
                                dataType: 'json',
                                delay: 250,
                                data: function (params) {
                                    return {
                                        term: params.term, // search term 请求参数
                                        page: params.page
                                    };
                                },
                                tags: false,
                                allowClear: false,
                                processResults: function (data, params) {
                                    params.page = params.page || 1;
                                    return {
                                        results: data.items,//itemList
                                        pagination: {
                                            more: (params.page * 30) < data.total_count
                                        }
          ");
                WriteLiteral(@"                          };
                                },
                                multiple: false
                            },
                            escapeMarkup: function (markup) { return markup; },
                            formatResult: function formatRepo(repo) { return repo.text; },
                            formatSelection: function formatRepoSelection(repo) { return repo.text; }
                        }
                    },
                    { label: ""备注:"", name: ""Remarks"" }
                ]
            });
            var table = $('#myTable').DataTable({
                ajax: {
                    url: """);
                EndContext();
                BeginContext(15013, 43, false);
#line 328 "D:\HRManage\HRMS\Views\Employee\Index.cshtml"
                     Write(Url.Action("EmployeeIndexData", "Employee"));

#line default
#line hidden
                EndContext();
                BeginContext(15056, 7871, true);
                WriteLiteral(@""",
                    type: ""post""
                },
                order: [[0, 'asc']],//一定要添加
                columns: [
                    { data: ""EmployeeId"", title: ""工号"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 1 },
                    { data: ""Name"", title: ""姓名"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 1 },
                    { data: ""IdentityType"", title: ""证件类型"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 6 },
                    { data: ""IdentityNumber"", title: ""证件号码"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 5 },
                    { data: ""Ethnicity"", title: ""民族"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 5 },
                    { data: ""Birth"", title: ""出生日期"", searchable: true, orderable: true, width: ""100px"", responsivePriority: 5 },
                    { data: ""Gender"", title: ""性别"", searchable: true, orderable: true, width: ""100px"", ");
                WriteLiteral(@"responsivePriority: 5 },
                    { data: ""Age"", title: ""年龄"", searchable: true, orderable: true, width: ""100px"" },
                    { data: ""Marital"", title: ""婚姻状况"", searchable: true, orderable: true, width: ""50px"" },
                    { data: ""Education"", title: ""文化程度"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""GraduateFrom"", title: ""毕业院校"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""GraduationDate"", title: ""毕业时间"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""Political"", title: ""政治面貌"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""RegisteredResidence"", title: ""户口所在地"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""Residence"", title: ""常住地址"", searchable: true, orderable: true, width: ""50px"", resp");
                WriteLiteral(@"onsivePriority: 5 },
                    { data: ""MobilePhone"", title: ""联系手机"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""Phone"", title: ""联系电话"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""EmergencyContact"", title: ""紧急联系人"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""EmContactPhone"", title: ""紧急联系人电话"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""Email"", title: ""邮箱地址"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""ZipCode"", title: ""邮政编码"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""Certificates"", title: ""资格证书"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""CertificateDate"", title: ""取得资格证书日期"", s");
                WriteLiteral(@"earchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    {
                        data: ""EntryDate"", title: ""入职日期"", searchable: true, orderable: true, width: ""150px"",
                        render: function (val, type, row) {
                            if (val !== null && val.match(/\/Date\((\d+)\)\//gi)) {
                                val = moment(eval(val.replace(/\/Date\((\d+)\)\//gi, ""new Date($1)""))).format('YYYY-MM-DD HH:mm:ss');
                                row.createtime = val;
                            }
                            return val;
                        }
                    },
                    { data: ""DimissionDate"", title: ""离职日期"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""TermOfContract"", title: ""劳动合同期限"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""EmployeeStatus"", title: ""员工状态"", searchable: true, ord");
                WriteLiteral(@"erable: true, width: ""50px"", responsivePriority: 5 },
                    {
                        data: ""Valid"", title: ""是否冻结"", searchable: true, orderable: true, width: ""100px"",
                        render: function (val, type, row) {
                            if (val === true) {
                                return ""是"";
                            } else if (val === false) {
                                return ""否"";
                            } else {
                                return ""未知"";
                            }
                        }
                    },
                    { data: ""Remarks"", title: ""备注"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""EmployeeType"", title: ""员工类型"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""Company"", title: ""所属公司"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { da");
                WriteLiteral(@"ta: ""Department"", title: ""所属部门"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""Position"", title: ""岗位"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""LabourCompany"", title: ""所属劳务公司"", searchable: true, orderable: true, width: ""50px"", responsivePriority: 5 },
                    { data: ""Attachment"", title: ""附件路径"", searchable: true, orderable: true, width: ""50px"" }

                ],
                buttons: [
                    { extend: ""create"", text: ""创建"", editor: editor },
                    { extend: ""edit"", text: ""编辑"", editor: editor },
                    { extend: ""remove"", text: ""删除"", editor: editor },
                    {
                        extend: 'collection',
                        text: '导出',
                        buttons: [
                            { extend: ""copyHtml5"", text: ""复制"" },
                            { extend: ""excelHtml5"", text: ""导出EXCEL"" }");
                WriteLiteral(@",
                            { extend: ""csvHtml5"", text: ""导出CSV"" },
                            //{ extend: ""pdfHtml5"", text: ""导出PDF"" }
                        ]
                    }
                ]
            });

            //editor.on('initCreate', function () {
            //    editor.show(); //Shows all fields
            //});

            //editor.on('initEdit', function () {
            //    editor.show(); //Shows all fields
            //    editor.hide('password');
            //});

            editor.on('preSubmit', function (e, o, action) {
                if (action !== 'remove') {
                    ;
                }
            });

            $('#Search').click(function () {
                var items = $(this).parents('.booking-search').find('.fiter');
                $.each(items, function (index, obj) {
                    var i = $(obj).attr('data-column');
                    var val = $('#col' + i + '_filter').val();
                    if (val ===");
                WriteLiteral(@" null)
                        val = '';
                    var selectot = '.search-' + i;
                    if ($(selectot).length === 0) {
                        $('#myTable').DataTable().column(i).search(val, false, false);
                    }
                    else {
                        $('#myTable').DataTable().column($(selectot)).search(val, false, false);
                    }
                });

                $('#myTable').DataTable().columns().search().draw();
            });
        });

        function Resize() {

            $('#myTable').DataTable()
                .columns.adjust()
                .responsive.recalc();
        }
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
