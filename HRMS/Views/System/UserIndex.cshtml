
@{
    ViewBag.Title = "用户管理";
    Layout = ViewBag.Layout;
}
<div class="page-content-body">
    <div class="row">
        <div class="col-md-12">

            <div class="form-inline">

                <div class="booking-search">
                    <div class="form-group ">
                        <div class="fiter" data-column="0" data-name="LoginName">
                            <input class="form-control" type="text" id="col0_filter" placeholder="登录名">
                        </div>
                    </div>
                    <div class="form-group ">
                        <div class="fiter" data-column="1" data-name="AliasName">
                            <input class="form-control" type="text" id="col1_filter" placeholder="别名">
                        </div>
                    </div>
                    <div class="form-group ">
                        <button class="btn green" width="120" id="Search">查询 <i class="fa fa-search"></i></button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">
            <table id="myTable" class="table table-striped table-bordered"></table>
        </div>
    </div>
    <div id="customForm">
        <fieldset class="userinfo">
            <legend>用户信息</legend>
            <div data-editor-template="LoginName"></div>
            <div data-editor-template="Password"></div>
            <div data-editor-template="AliasName"></div>
        </fieldset>
        <fieldset class="relationinfo">
            <legend>关联信息</legend>
            <div data-editor-template="UserRole[].RoleId"></div>
        </fieldset>
        <fieldset class="exinfo">
            <legend>扩展信息</legend>
            <div data-editor-template="IsDisabled"></div>
            <div data-editor-template="IsAdmin"></div>
        </fieldset>
    </div>
</div>
@section scripts{

    <script>
        function filterColumn(i) {
            $('#myTable').DataTable().column(i).search(
                $('#col' + i + '_filter').val(),
                false,
                false
            ).draw();
        }
        var editor;
        $(document).ready(function () {
            App.addResizeHandler(Resize);
            editor = new $.fn.dataTable.Editor({
                idSrc: "Id",
               ajax: {
                        create: {
                            type: 'POST',
                            url:  '@Url.Action("UserIndexCreate", "System")'
                        },
                        edit: {
                            type: 'POST',
                            url:  '@Url.Action("UserIndexUpdate", "System")'
                        },
                        remove: {
                            type: 'POST',
                            url:  '@Url.Action("UserIndexDelete", "System")'
                        }
                    },
                table: "#myTable",
                template: '#customForm',
                fields: [
                    { label: "登录名:", name: "LoginName" },
                    { label: "密码:", name: "Password", type: "password", },
                    { label: "别名:", name: "AliasName" },
                     {
                         type: "radio",
                         label: "是否禁用:",
                         name: "IsDisabled",
                         options: [
                             { label: "禁用", value: true },
                             { label: "启用", value: false }
                         ]
                     }
                     ,
                     {
                         type: "radio",
                         label: "是否管理员:",
                         name: "IsAdmin",
                         options: [
                             { label: "是", value: true },
                             { label: "否", value: false }
                         ]
                     }, {
                         label: "角色:", name: "UserRole[].RoleId",
                         type: "select2",
                         opts: {
                             theme: "classic",
                             tags: true,
                             allowClear: false,
                             multiple: true,
                             ajax: {
                                 type: 'GET',
                                 url: "@Url.Action("UserRoleInfraData", "Infra")",
                                 dataType: 'json',
                                 delay: 250,
                                 data: function (params) {
                                     return {
                                         term: params.term, // search term 请求参数
                                         page: params.page
                                     };
                                 },
                                 processResults: function (data, params) {
                                     params.page = params.page || 1;
                                     return {
                                         results: data.items,//itemList
                                         pagination: {
                                             more: (params.page * 30) < data.total_count
                                         }
                                     };
                                 },
                                 cache: true
                             },
                             escapeMarkup: function (markup) { return markup; },
                             formatResult: function formatRepo(repo) { return repo.text; },
                             formatSelection: function formatRepoSelection(repo) { return repo.text; }
                         }

                     }
                ]
            });
            var table = $('#myTable').DataTable({
                ajax: {
                    url: "@Url.Action("UserIndexData", "System")",
                    type: "POST"
                },
                order: [[7, 'desc']],//一定要添加
                colReorder: {
                    fixedColumnsLeft: 1
                },
                columns: [
                    { data: "LoginName", title: "登录名", searchable: true, orderable: true, width: "100px" },
                    { data: "AliasName", title: "别名", searchable: true, orderable: true, width: "100px" },
                {
                    data: "LastLoginDatetime", title: "最后登录时间", searchable: true, orderable: true, width: "100px",
                    render: function (val, type, row) {
                        if (val != null && val.match(/\/Date\((\d+)\)\//gi)) {
                            val = moment(eval(val.replace(/\/Date\((\d+)\)\//gi, "new Date($1)"))).format('YYYY-MM-DD HH:mm:ss');
                            row.lastlogintime = val;
                        }
                        return val;
                    }
                },
                    { data: "LoginNumber", title: "登录次数", searchable: true, orderable: true, width: "100px" },
                {
                    data: "IsDisabled", title: "是否禁用", searchable: true, orderable: false, width: "100px",
                    render: function (val, type, row) {
                        return val == true ? "禁用" : "启用";
                    }
                },
               {
                   data: "IsAdmin", title: "是否管理员", searchable: true, orderable: false, width: "100px",
                   render: function (val, type, row) {
                       return val == true ? "是" : "不是";
                   }
                    },
                    { data: "UserRole", title: "所属角色", width: "100px", orderable: false, render: "[, ].RoleName", },
                    //{ data: "Modifier", title: "修改者", searchable: true, orderable: true, width: "100px" },
                    //{
                    //    data: "ModifyTime", title: "修改日期", searchable: true, orderable: true, width: "100px",
                    //    render: function (val, type, row) {
                    //        if (val != null && val.match(/\/Date\((\d+)\)\//gi)) {
                    //            val = moment(eval(val.replace(/\/Date\((\d+)\)\//gi, "new Date($1)"))).format('YYYY-MM-DD HH:mm:ss');
                    //            row.createtime = val;
                    //        }
                    //        return val;
                    //    }
                    //},
                    { data: "Creator", title: "创建者", searchable: true, orderable: true, width: "100px" },
                {
                    data: "CreateTime", title: "创建日期", searchable: true, orderable: true, width: "100px",
                    render: function (val, type, row) {
                        if (val != null && val.match(/\/Date\((\d+)\)\//gi)) {
                            val = moment(eval(val.replace(/\/Date\((\d+)\)\//gi, "new Date($1)"))).format('YYYY-MM-DD HH:mm:ss');
                            row.createtime = val;
                        }
                        return val;
                    }
                },
                ],
                buttons: [
                @if (Context.HasPermission(Url.Action("UserIndexCreate", "System")))
                {
                    Output.WriteLine("{ extend: \"create\", text: \"创建\", editor: editor },");
                }
                @if (Context.HasPermission(Url.Action("UserIndexUpdate", "System")))
                {
                    Output.WriteLine("{ extend: \"edit\", text: \"编辑\", editor: editor },");
                }
                @if (Context.HasPermission(Url.Action("UserIndexDelete", "System")))
                {
                    Output.WriteLine("{ extend: \"remove\", text: \"删除\", editor: editor },");
                }
                    {
                        extend: 'collection',
                        text: '导出',
                        buttons: [
                             { extend: "copyHtml5", text: "复制" },
                             { extend: "excelHtml5", text: "导出EXCEL" },
                             { extend: "csvHtml5", text: "导出CSV" },
                             //{ extend: "pdfHtml5", text: "导出PDF" }
                        ]
                    }
                ]
            });
            editor.on('initCreate', function () {
                editor.show(); //Shows all fields
            });

            editor.on('initEdit', function () {
                editor.show(); //Shows all fields
                editor.hide('Password');
            });

            editor.on('preSubmit', function (e, o, action) {
                if (action !== 'remove') {

                }
            });

            $('#Search').click(function () {
                var items = $(this).parents('.booking-search').find('.fiter');
                $.each(items, function (index, obj) {
                    var i = $(obj).attr('data-column');
                    var name = $(obj).attr('data-name') + '';
                    var val = $('#col' + i + '_filter').val();
                    if (val === null)
                        val = '';
                    var index = $('#myTable').DataTable().columns().dataSrc().indexOf(name)
                    var selectot = '.search-' + index;
                    if ($(selectot).length === 0) {
                        $('#myTable').DataTable().column(index).search(val, false, false);
                    }
                    else {
                        $('#myTable').DataTable().column($(selectot)).search(val, false, false);
                    }
                });

                $('#myTable').DataTable().columns().search().draw();
            });
        });

        function Resize() {

            $('#myTable').DataTable()
                .columns.adjust()
                .responsive.recalc();
        }
    </script>
}